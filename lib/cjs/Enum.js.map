{"version":3,"file":"Enum.js","names":["Symbol","iterator","Enum","entries","options","isNil","isObject","isArray","TypeError","isString","_setOptions","_setEntries","name","_options","ignoreCase","_defaultOptions","enums","entriesArray","reduce","result","entry","index","_entries","EnumEntry","push","key","isEnumEntry","ReferenceError","getLowerCaseEnums","toLowerCase","find","map","value","includes","get","JSON","stringify","next","length","done","global","window"],"sources":["../../src/Enum.js"],"sourcesContent":["import isString from './helpers/isString.js';\nimport isObject from './helpers/isObject.js';\nimport isArray from './helpers/isArray.js';\nimport isNil from './helpers/isNil.js';\n\nimport EnumEntry from './EnumEntry.js';\n\nexport default class Enum {\n    static _defaultOptions = {\n        ignoreCase: false\n    };\n\n    /**\n     * @param {String} key\n     */\n    static register(key = 'Enum') {\n        if (typeof global !== 'undefined' && !global[key]) {\n            global[key] = Enum;\n        } else if (typeof window !== 'undefined' && !window[key]) {\n            window[key] = Enum;\n        }\n    }\n\n    /**\n     * @param {Array|Object} entries\n     * @param {Object|String} options\n     */\n    constructor(entries, options = {}) {\n        if (isNil(entries) || (!isObject(entries) && !isArray(entries))) {\n            throw new TypeError('entries must be of type \"object\" or \"array\"');\n        }\n\n        if (isNil(options) || (!isObject(options) && !isString(options))) {\n            throw new TypeError('options must be of type \"object\"');\n        }\n\n        this._setOptions(options);\n        this._setEntries(entries);\n    }\n\n    /**\n     * @param {Object|String} options\n     */\n    _setOptions(options) {\n        if (isString(options)) {\n            options = { name: options };\n        }\n\n        this._options = options || {};\n        this._options.ignoreCase = this._options.ignoreCase || Enum._defaultOptions.ignoreCase;\n\n        if (this._options.name) {\n            this.name = this._options.name;\n        }\n    }\n\n    /**\n     * @param {Array|Object} entries\n     */\n    _setEntries(entries) {\n        this.enums = [];\n\n        if (isArray(entries)) {\n            const entriesArray = entries;\n\n            entries = entriesArray.reduce((result, entry, index) => {\n                result[entry] = index;\n                return result;\n            }, {});\n        }\n\n        this._entries = entries;\n\n        for (const entry in this._entries) {\n            this[entry] = new EnumEntry(entry, this._entries[entry], { ignoreCase: this._options.ignoreCase });\n            this.enums.push(this[entry]);\n        }\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} entries\n     */\n    get(key) {\n        if (isNil(key)) {\n            return;\n        }\n\n        if (EnumEntry.isEnumEntry(key)) {\n            if (key.key in this) {\n                return key;\n            } else {\n                throw new ReferenceError(`\"${key.key}\" is not a valid enum entry key`);\n            }\n        }\n\n        if (isString(key)) {\n            let enums = this.enums;\n\n            if (this._options.ignoreCase) {\n                enums = this.getLowerCaseEnums();\n                key = key.toLowerCase();\n            }\n\n            if (!(key in this)) {\n                throw new ReferenceError(`\"${key}\" is not a valid enum entry key`);\n            }\n\n            return enums.find(entry => entry.key === key);\n        }\n\n        if (!this.enums.map(entry => entry.value).includes(key)) {\n            throw new ReferenceError(`\"${key}\" is not a valid enum entry value`);\n        }\n\n        return this.enums.find(entry => entry.value === key);\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} value\n     */\n    getKey(value) {\n        const entry = this.get(value);\n\n        if (!entry) {\n            throw new ReferenceError(`entry not found`);\n        }\n\n        return entry.key;\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} value\n     */\n    getValue(value) {\n        const entry = this.get(value);\n\n        if (!entry) {\n            throw new ReferenceError(`entry not found`);\n        }\n\n        return entry.value;\n    }\n\n    getLowerCaseEnums() {\n        return this.enums.map(entry => {\n            return { ...entry, key: entry.key.toLowerCase() };\n        });\n    }\n\n    toJSON() {\n        return JSON.stringify(this._entries);\n    }\n\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.enums.length) {\n                    return { value: this.enums[index++], done: false };\n                } else {\n                    return { done: true };\n                }\n            }\n        };\n    }\n}\n"],"mappings":"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"}