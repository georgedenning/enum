{"version":3,"file":"umd.js","sources":["../src/helpers/isType.js","../src/helpers/isString.js","../src/helpers/isArray.js","../src/helpers/isNull.js","../src/helpers/isObject.js","../src/helpers/isUndefined.js","../src/helpers/isNil.js","../src/helpers/isNumber.js","../src/EnumEntry.js","../src/Enum.js"],"sourcesContent":["export default (type, value) => {\n    return typeof value === type;\n};\n","import isType from './isType.js';\n\nexport default value => isType('string', value);\n","export default value => Array.isArray(value);\n","export default value => value === null;\n","import isType from './isType.js';\nimport isArray from './isArray.js';\nimport isNull from './isNull.js';\n\nexport default value => isType('object', value) && !isArray(value) && !isNull(value);\n","export default value => value === undefined;\n","import isUndefined from './isUndefined.js';\nimport isNull from './isNull.js';\n\nexport default value => isUndefined(value) || isNull(value);\n","import isType from './isType.js';\n\nexport default value => isType('number', value);\n","import isObject from './helpers/isObject.js';\nimport isNil from './helpers/isNil.js';\nimport isString from './helpers/isString.js';\nimport isNumber from './helpers/isNumber.js';\n\nexport default class EnumEntry {\n    static _defaultOptions = {\n        ignoreCase: false\n    };\n\n    /**\n     * @param {EnumEntry|Object} entry\n     */\n    static isEnumEntry(entry) {\n        if (entry instanceof EnumEntry) {\n            return true;\n        }\n\n        if (isObject(entry) && !isNil(entry.key) && !isNil(entry.value)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @param {String} key\n     * @param {Number} value\n     * @param {Object|String} options\n     */\n    constructor(key, value, options = {}) {\n        if (isNil(key) || !isString(key)) {\n            throw new TypeError('key must be of type \"string\"');\n        }\n        if (isNil(value) || !isNumber(value)) {\n            throw new TypeError('value must be of type \"number\"');\n        }\n        if (isNil(options) || !isObject(options)) {\n            throw new TypeError('options must be of type \"object\"');\n        }\n\n        this.key = key;\n        this.value = value;\n\n        this._setOptions(options);\n    }\n\n    /**\n     * @param {Object|String} options\n     */\n    _setOptions(options) {\n        this._options = options || {};\n        this._options.ignoreCase = this._options.ignoreCase || EnumEntry._defaultOptions.ignoreCase;\n    }\n\n    /**\n     * @param {EnumEntry|String|Number}\n     */\n    has(value) {\n        if (EnumEntry.isEnumEntry(value)) {\n            return this.value === value.value;\n        }\n\n        if (isString(value)) {\n            if (this._options.ignoreCase) {\n                return this.key.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n            }\n            return this.key.indexOf(value) >= 0;\n        }\n\n        return this.value === value;\n    }\n\n    /**\n     * @param {EnumEntry|String|Number}\n     */\n    is(key) {\n        if (EnumEntry.isEnumEntry(key)) {\n            return this.key === key.key;\n        }\n\n        if (isString(key)) {\n            if (this._options.ignoreCase) {\n                return this.key.toLowerCase() === key.toLowerCase();\n            }\n            return this.key === key;\n        }\n\n        return this.value === key;\n    }\n\n    toString() {\n        return this.key;\n    }\n\n    toJSON() {\n        return JSON.stringify(this.key);\n    }\n\n    valueOf() {\n        return this.value;\n    }\n}\n","import isString from './helpers/isString.js';\nimport isObject from './helpers/isObject.js';\nimport isArray from './helpers/isArray.js';\nimport isNil from './helpers/isNil.js';\n\nimport EnumEntry from './EnumEntry.js';\n\nexport default class Enum {\n    static _defaultOptions = {\n        ignoreCase: false\n    };\n\n    /**\n     * @param {String} key\n     */\n    static register(key = 'Enum') {\n        if (typeof global !== 'undefined' && !global[key]) {\n            global[key] = Enum;\n        } else if (typeof window !== 'undefined' && !window[key]) {\n            window[key] = Enum;\n        }\n    }\n\n    /**\n     * @param {Array|Object} entries\n     * @param {Object|String} options\n     */\n    constructor(entries, options = {}) {\n        if (isNil(entries) || (!isObject(entries) && !isArray(entries))) {\n            throw new TypeError('entries must be of type \"object\" or \"array\"');\n        }\n\n        if (isNil(options) || (!isObject(options) && !isString(options))) {\n            throw new TypeError('options must be of type \"object\"');\n        }\n\n        this._setOptions(options);\n        this._setEntries(entries);\n    }\n\n    /**\n     * @param {Object|String} options\n     */\n    _setOptions(options) {\n        if (isString(options)) {\n            options = { name: options };\n        }\n\n        this._options = options || {};\n        this._options.ignoreCase = this._options.ignoreCase || Enum._defaultOptions.ignoreCase;\n\n        if (this._options.name) {\n            this.name = this._options.name;\n        }\n    }\n\n    /**\n     * @param {Array|Object} entries\n     */\n    _setEntries(entries) {\n        this.enums = [];\n\n        if (isArray(entries)) {\n            const entriesArray = entries;\n\n            entries = entriesArray.reduce((result, entry, index) => {\n                result[entry] = index;\n                return result;\n            }, {});\n        }\n\n        this._entries = entries;\n\n        for (const entry in this._entries) {\n            this[entry] = new EnumEntry(entry, this._entries[entry], { ignoreCase: this._options.ignoreCase });\n            this.enums.push(this[entry]);\n        }\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} entries\n     */\n    get(key) {\n        if (isNil(key)) {\n            return;\n        }\n\n        if (EnumEntry.isEnumEntry(key)) {\n            if (key.key in this) {\n                return key;\n            } else {\n                throw new ReferenceError(`\"${key.key}\" is not a valid enum entry key`);\n            }\n        }\n\n        if (isString(key)) {\n            let enums = this.enums;\n\n            if (this._options.ignoreCase) {\n                enums = this.getLowerCaseEnums();\n                key = key.toLowerCase();\n            }\n\n            if (!(key in this)) {\n                throw new ReferenceError(`\"${key}\" is not a valid enum entry key`);\n            }\n\n            return enums.find(entry => entry.key === key);\n        }\n\n        if (!this.enums.map(entry => entry.value).includes(key)) {\n            throw new ReferenceError(`\"${key}\" is not a valid enum entry value`);\n        }\n\n        return this.enums.find(entry => entry.value === key);\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} value\n     */\n    getKey(value) {\n        const entry = this.get(value);\n\n        if (!entry) {\n            throw new ReferenceError(`entry not found`);\n        }\n\n        return entry.key;\n    }\n\n    /**\n     * @param {EnumEntry|String|Number} value\n     */\n    getValue(value) {\n        const entry = this.get(value);\n\n        if (!entry) {\n            throw new ReferenceError(`entry not found`);\n        }\n\n        return entry.value;\n    }\n\n    getLowerCaseEnums() {\n        return this.enums.map(entry => {\n            return { ...entry, key: entry.key.toLowerCase() };\n        });\n    }\n\n    toJSON() {\n        return JSON.stringify(this._entries);\n    }\n\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.enums.length) {\n                    return { value: this.enums[index++], done: false };\n                } else {\n                    return { done: true };\n                }\n            }\n        };\n    }\n}\n"],"names":["type","value","isType","Array","isArray","isNull","undefined","isUndefined","EnumEntry","key","options","isNil","isString","TypeError","isNumber","isObject","_setOptions","_options","ignoreCase","_defaultOptions","isEnumEntry","toLowerCase","indexOf","JSON","stringify","entry","Symbol","iterator","Enum","entries","_setEntries","name","enums","entriesArray","reduce","result","index","_entries","push","ReferenceError","getLowerCaseEnums","find","map","includes","get","_objectSpread","next","length","done","global","window"],"mappings":"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"}